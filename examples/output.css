/*! tailwindcss v4.1.14 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-100: oklch(93.6% 0.032 17.717);
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-orange-100: oklch(95.4% 0.038 75.164);
    --color-orange-500: oklch(70.5% 0.213 47.604);
    --color-yellow-100: oklch(97.3% 0.071 103.193);
    --color-yellow-500: oklch(79.5% 0.184 86.047);
    --color-green-100: oklch(96.2% 0.044 156.743);
    --color-green-500: oklch(72.3% 0.219 149.579);
    --color-teal-100: oklch(95.3% 0.051 180.801);
    --color-teal-500: oklch(70.4% 0.14 182.503);
    --color-cyan-100: oklch(95.6% 0.045 203.388);
    --color-cyan-500: oklch(71.5% 0.143 215.221);
    --color-blue-100: oklch(93.2% 0.032 255.585);
    --color-blue-500: oklch(62.3% 0.214 259.815);
    --color-indigo-100: oklch(93% 0.034 272.788);
    --color-indigo-500: oklch(58.5% 0.233 277.117);
    --color-purple-100: oklch(94.6% 0.033 307.174);
    --color-purple-500: oklch(62.7% 0.265 303.9);
    --color-pink-100: oklch(94.8% 0.028 342.258);
    --color-pink-500: oklch(65.6% 0.241 354.308);
    --color-gray-100: oklch(96.7% 0.003 264.542);
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-gray-600: oklch(44.6% 0.03 256.802);
    --color-gray-800: oklch(27.8% 0.033 256.848);
    --color-gray-900: oklch(21% 0.034 264.665);
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-4xl: 56rem;
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --radius-lg: 0.5rem;
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .relative {
    position: relative;
  }
  .mx-auto {
    margin-inline: auto;
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }
  .mb-12 {
    margin-bottom: calc(var(--spacing) * 12);
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .h-12 {
    height: calc(var(--spacing) * 12);
  }
  .h-16 {
    height: calc(var(--spacing) * 16);
  }
  .h-32 {
    height: calc(var(--spacing) * 32);
  }
  .h-\[2rem\] {
    height: 2rem;
  }
  .h-full {
    height: 100%;
  }
  .w-1\/5 {
    width: calc(1/5 * 100%);
  }
  .w-12 {
    width: calc(var(--spacing) * 12);
  }
  .w-16 {
    width: calc(var(--spacing) * 16);
  }
  .w-32 {
    width: calc(var(--spacing) * 32);
  }
  .w-full {
    width: 100%;
  }
  .max-w-4xl {
    max-width: var(--container-4xl);
  }
  .jumi {
    animation: var(--jumi-accent-color-property, none), var(--jumi-backdrop-filter-property, none), var(--jumi-background-color-property, none), var(--jumi-border-radius-property, none), var(--jumi-color-property, none), var(--jumi-fill-property, none), var(--jumi-filter-property, none), var(--jumi-height-property, none), var(--jumi-justify-items-property, none), var(--jumi-opacity-property, none), var(--jumi-rotate-property, none), var(--jumi-scale-property, none), var(--jumi-text-shadow-property, none), var(--jumi-translate-property, none), var(--jumi-width-property, none), var(--jumi-arc-bottom-right-animation, none), var(--jumi-bounce-in-animation, none), var(--jumi-bounce-in-down-animation, none), var(--jumi-bounce-in-up-animation, none), var(--jumi-bubble-animation, none), var(--jumi-circle-in-animation, none), var(--jumi-fade-in-animation, none), var(--jumi-fold-in-animation, none), var(--jumi-magnetic-animation, none), var(--jumi-rush-in-right-animation, none), var(--jumi-slide-in-down-animation, none), var(--jumi-slide-in-up-animation, none), var(--jumi-zoom-in-animation, none);
    --jumi-animation-composition: replace;
    --jumi-animation-delay: 0s;
    --jumi-animation-direction: normal;
    --jumi-animation-duration: 1s;
    --jumi-animation-fill-mode: forwards;
    --jumi-animation-iteration-count: 1;
    --jumi-animation-play-state: running;
    --jumi-animation-timeline-scroller: nearest;
    --jumi-animation-timeline-axis: block;
    --jumi-animation-timeline-scroll: scroll(var(--jumi-animation-timeline-axis) var(--jumi-animation-timeline-scroller));
    --jumi-animation-timeline-inset-start: auto;
    --jumi-animation-timeline-inset-end: auto;
    --jumi-animation-timeline-inset: var(--jumi-animation-timeline-inset-start) var(--jumi-animation-timeline-inset-end);
    --jumi-animation-timeline-view: view(var(--jumi-animation-timeline-axis) var(--jumi-animation-timeline-inset));
    --jumi-animation-timeline: auto;
    --jumi-animation-timing-function: ease;
    --jumi-accent-color: auto;
    --jumi-backdrop-filter-blur: blur(0);
    --jumi-backdrop-filter-brightness: brightness(1);
    --jumi-backdrop-filter-contrast: contrast(1);
    --jumi-backdrop-filter-drop-shadow-offset-x: 0;
    --jumi-backdrop-filter-drop-shadow-offset-y: 0;
    --jumi-backdrop-filter-drop-shadow-blur: 0;
    --jumi-backdrop-filter-drop-shadow-color: transparent;
    --jumi-backdrop-filter-drop-shadow: drop-shadow(var(--jumi-backdrop-filter-drop-shadow-offset-x) var(--jumi-backdrop-filter-drop-shadow-offset-y) var(--jumi-backdrop-filter-drop-shadow-blur) var(--jumi-backdrop-filter-drop-shadow-color));
    --jumi-backdrop-filter-grayscale: grayscale(0);
    --jumi-backdrop-filter-hue-rotate: hue-rotate(0deg);
    --jumi-backdrop-filter-invert: invert(0);
    --jumi-backdrop-filter-opacity: opacity(1);
    --jumi-backdrop-filter-saturate: saturate(1);
    --jumi-backdrop-filter-sepia: sepia(0);
    --jumi-backdrop-filter: var(--jumi-backdrop-filter-blur) var(--jumi-backdrop-filter-brightness) var(--jumi-backdrop-filter-contrast) var(--jumi-backdrop-filter-drop-shadow) var(--jumi-backdrop-filter-grayscale) var(--jumi-backdrop-filter-hue-rotate) var(--jumi-backdrop-filter-invert) var(--jumi-backdrop-filter-opacity) var(--jumi-backdrop-filter-saturate) var(--jumi-backdrop-filter-sepia);
    --jumi-background-color: transparent;
    --jumi-border-top-left-radius: 0;
    --jumi-border-top-right-radius: 0;
    --jumi-border-bottom-right-radius: 0;
    --jumi-border-bottom-left-radius: 0;
    --jumi-border-radius: var(--jumi-border-top-left-radius) var(--jumi-border-top-right-radius) var(--jumi-border-bottom-right-radius) var(--jumi-border-bottom-left-radius);
    --jumi-color: canvastext;
    --jumi-fill: black;
    --jumi-filter-blur: blur(0);
    --jumi-filter-brightness: brightness(1);
    --jumi-filter-contrast: contrast(1);
    --jumi-filter-grayscale: grayscale(0);
    --jumi-filter-hue-rotate: hue-rotate(0deg);
    --jumi-filter-invert: invert(0);
    --jumi-filter-saturate: saturate(1);
    --jumi-filter-sepia: sepia(0);
    --jumi-filter-opacity: opacity(1);
    --jumi-filter-drop-shadow-offset-x: 0;
    --jumi-filter-drop-shadow-offset-y: 0;
    --jumi-filter-drop-shadow-blur: 0;
    --jumi-filter-drop-shadow-color: transparent;
    --jumi-filter-drop-shadow: drop-shadow(var(--jumi-filter-drop-shadow-offset-x) var(--jumi-filter-drop-shadow-offset-y) var(--jumi-filter-drop-shadow-blur) var(--jumi-filter-drop-shadow-color));
    --jumi-filter: var(--jumi-filter-blur) var(--jumi-filter-brightness) var(--jumi-filter-contrast) var(--jumi-filter-grayscale) var(--jumi-filter-hue-rotate) var(--jumi-filter-invert) var(--jumi-filter-saturate) var(--jumi-filter-sepia) var(--jumi-filter-opacity) var(--jumi-filter-drop-shadow);
    --jumi-height: auto;
    --jumi-justify-items: legacy;
    --jumi-opacity: 1;
    --jumi-rotate-x: 0;
    --jumi-rotate-y: 0;
    --jumi-rotate-z: 1;
    --jumi-rotate-angle: 0deg;
    --jumi-rotate: var(--jumi-rotate-x) var(--jumi-rotate-y) var(--jumi-rotate-z) var(--jumi-rotate-angle);
    --jumi-scale-x: 1;
    --jumi-scale-y: 1;
    --jumi-scale-z: 1;
    --jumi-scale: var(--jumi-scale-x) var(--jumi-scale-y) var(--jumi-scale-z);
    --jumi-text-shadow-offset-x: 0px;
    --jumi-text-shadow-offset-y: 0px;
    --jumi-text-shadow-blur: 0;
    --jumi-text-shadow-color: currentColor;
    --jumi-text-shadow: var(--jumi-text-shadow-offset-x) var(--jumi-text-shadow-offset-y) var(--jumi-text-shadow-blur) var(--jumi-text-shadow-color);
    --jumi-translate-x: 0px;
    --jumi-translate-y: 0px;
    --jumi-translate-z: 0px;
    --jumi-translate: var(--jumi-translate-x) var(--jumi-translate-y) var(--jumi-translate-z);
    --jumi-width: auto;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }
  .place-items-center {
    place-items: center;
  }
  .items-center {
    align-items: center;
  }
  .justify-center {
    justify-content: center;
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .space-y-8 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-\[0px\] {
    border-radius: 0px;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .bg-blue-100 {
    background-color: var(--color-blue-100);
  }
  .bg-blue-500 {
    background-color: var(--color-blue-500);
  }
  .bg-cyan-100 {
    background-color: var(--color-cyan-100);
  }
  .bg-cyan-500 {
    background-color: var(--color-cyan-500);
  }
  .bg-gray-100 {
    background-color: var(--color-gray-100);
  }
  .bg-gray-300 {
    background-color: var(--color-gray-300);
  }
  .bg-green-100 {
    background-color: var(--color-green-100);
  }
  .bg-green-500 {
    background-color: var(--color-green-500);
  }
  .bg-indigo-100 {
    background-color: var(--color-indigo-100);
  }
  .bg-indigo-500 {
    background-color: var(--color-indigo-500);
  }
  .bg-orange-100 {
    background-color: var(--color-orange-100);
  }
  .bg-orange-500 {
    background-color: var(--color-orange-500);
  }
  .bg-pink-100 {
    background-color: var(--color-pink-100);
  }
  .bg-pink-500 {
    background-color: var(--color-pink-500);
  }
  .bg-purple-100 {
    background-color: var(--color-purple-100);
  }
  .bg-purple-500 {
    background-color: var(--color-purple-500);
  }
  .bg-red-100 {
    background-color: var(--color-red-100);
  }
  .bg-red-500 {
    background-color: var(--color-red-500);
  }
  .bg-teal-100 {
    background-color: var(--color-teal-100);
  }
  .bg-teal-500 {
    background-color: var(--color-teal-500);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-yellow-100 {
    background-color: var(--color-yellow-100);
  }
  .bg-yellow-500 {
    background-color: var(--color-yellow-500);
  }
  .bg-gradient-to-r {
    --tw-gradient-position: to right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .from-pink-500 {
    --tw-gradient-from: var(--color-pink-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-yellow-500 {
    --tw-gradient-to: var(--color-yellow-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .p-8 {
    padding: calc(var(--spacing) * 8);
  }
  .text-center {
    text-align: center;
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .text-gray-600 {
    color: var(--color-gray-600);
  }
  .text-gray-800 {
    color: var(--color-gray-800);
  }
  .text-gray-900 {
    color: var(--color-gray-900);
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .blur-\[1px\] {
    --tw-blur: blur(1px);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .animation-delay-forward-300\/\[8\] {
    & > :nth-child(1) {
      --jumi-animation-delay: calc(300ms * 0);
    }
    & > :nth-child(2) {
      --jumi-animation-delay: calc(300ms * 1);
    }
    & > :nth-child(3) {
      --jumi-animation-delay: calc(300ms * 2);
    }
    & > :nth-child(4) {
      --jumi-animation-delay: calc(300ms * 3);
    }
    & > :nth-child(5) {
      --jumi-animation-delay: calc(300ms * 4);
    }
    & > :nth-child(6) {
      --jumi-animation-delay: calc(300ms * 5);
    }
    & > :nth-child(7) {
      --jumi-animation-delay: calc(300ms * 6);
    }
    & > :nth-child(8) {
      --jumi-animation-delay: calc(300ms * 7);
    }
  }
  .animation-delay-backward-150\/5 {
    & > :nth-child(1) {
      --jumi-animation-delay: calc(150ms * 4);
    }
    & > :nth-child(2) {
      --jumi-animation-delay: calc(150ms * 3);
    }
    & > :nth-child(3) {
      --jumi-animation-delay: calc(150ms * 2);
    }
    & > :nth-child(4) {
      --jumi-animation-delay: calc(150ms * 1);
    }
    & > :nth-child(5) {
      --jumi-animation-delay: calc(150ms * 0);
    }
  }
  .animation-delay-forward-100\/5 {
    & > :nth-child(1) {
      --jumi-animation-delay: calc(100ms * 0);
    }
    & > :nth-child(2) {
      --jumi-animation-delay: calc(100ms * 1);
    }
    & > :nth-child(3) {
      --jumi-animation-delay: calc(100ms * 2);
    }
    & > :nth-child(4) {
      --jumi-animation-delay: calc(100ms * 3);
    }
    & > :nth-child(5) {
      --jumi-animation-delay: calc(100ms * 4);
    }
  }
  .animate-backdrop-filter-drop-shadow-color-amber-100\/75 {
    --jumi-backdrop-filter-drop-shadow-color: color-mix(in oklab, oklch(96.2% 0.059 95.617) 75%, transparent);
    --jumi-backdrop-filter-property: var(--jumi-backdrop-filter-animation-duration, var(--jumi-animation-duration)) var(--jumi-backdrop-filter-animation-timing-function, var(--jumi-animation-timing-function)) var(--jumi-backdrop-filter-animation-delay, var(--jumi-animation-delay)) var(--jumi-backdrop-filter-animation-iteration-count, var(--jumi-animation-iteration-count)) var(--jumi-backdrop-filter-animation-direction, var(--jumi-animation-direction)) var(--jumi-backdrop-filter-animation-fill-mode, var(--jumi-animation-fill-mode)) var(--jumi-backdrop-filter-animation-play-state, var(--jumi-animation-play-state)) jumi-backdrop-filter;
  }
  .animate-background-color-blue-500 {
    --jumi-background-color: oklch(62.3% 0.214 259.815);
    --jumi-background-color-property: var(--jumi-background-color-animation-duration, var(--jumi-animation-duration)) var(--jumi-background-color-animation-timing-function, var(--jumi-animation-timing-function)) var(--jumi-background-color-animation-delay, var(--jumi-animation-delay)) var(--jumi-background-color-animation-iteration-count, var(--jumi-animation-iteration-count)) var(--jumi-background-color-animation-direction, var(--jumi-animation-direction)) var(--jumi-background-color-animation-fill-mode, var(--jumi-animation-fill-mode)) var(--jumi-background-color-animation-play-state, var(--jumi-animation-play-state)) jumi-background-color;
  }
  .animate-border-radius-\[20px\] {
    --jumi-border-radius: 20px;
    --jumi-border-radius-property: var(--jumi-border-radius-animation-duration, var(--jumi-animation-duration)) var(--jumi-border-radius-animation-timing-function, var(--jumi-animation-timing-function)) var(--jumi-border-radius-animation-delay, var(--jumi-animation-delay)) var(--jumi-border-radius-animation-iteration-count, var(--jumi-animation-iteration-count)) var(--jumi-border-radius-animation-direction, var(--jumi-animation-direction)) var(--jumi-border-radius-animation-fill-mode, var(--jumi-animation-fill-mode)) var(--jumi-border-radius-animation-play-state, var(--jumi-animation-play-state)) jumi-border-radius;
  }
  .animate-color-gray-500 {
    --jumi-color: oklch(55.1% 0.027 264.364);
    --jumi-color-property: var(--jumi-color-animation-duration, var(--jumi-animation-duration)) var(--jumi-color-animation-timing-function, var(--jumi-animation-timing-function)) var(--jumi-color-animation-delay, var(--jumi-animation-delay)) var(--jumi-color-animation-iteration-count, var(--jumi-animation-iteration-count)) var(--jumi-color-animation-direction, var(--jumi-animation-direction)) var(--jumi-color-animation-fill-mode, var(--jumi-animation-fill-mode)) var(--jumi-color-animation-play-state, var(--jumi-animation-play-state)) jumi-color;
  }
  .animate-color-red-500 {
    --jumi-color: oklch(63.7% 0.237 25.331);
    --jumi-color-property: var(--jumi-color-animation-duration, var(--jumi-animation-duration)) var(--jumi-color-animation-timing-function, var(--jumi-animation-timing-function)) var(--jumi-color-animation-delay, var(--jumi-animation-delay)) var(--jumi-color-animation-iteration-count, var(--jumi-animation-iteration-count)) var(--jumi-color-animation-direction, var(--jumi-animation-direction)) var(--jumi-color-animation-fill-mode, var(--jumi-animation-fill-mode)) var(--jumi-color-animation-play-state, var(--jumi-animation-play-state)) jumi-color;
  }
  .animate-fill-purple-500 {
    --jumi-fill: oklch(62.7% 0.265 303.9);
    --jumi-fill-property: var(--jumi-fill-animation-duration, var(--jumi-animation-duration)) var(--jumi-fill-animation-timing-function, var(--jumi-animation-timing-function)) var(--jumi-fill-animation-delay, var(--jumi-animation-delay)) var(--jumi-fill-animation-iteration-count, var(--jumi-animation-iteration-count)) var(--jumi-fill-animation-direction, var(--jumi-animation-direction)) var(--jumi-fill-animation-fill-mode, var(--jumi-animation-fill-mode)) var(--jumi-fill-animation-play-state, var(--jumi-animation-play-state)) jumi-fill;
  }
  .animate-filter-blur-md {
    --jumi-filter-blur: blur(12px);
    --jumi-filter-property: var(--jumi-filter-animation-duration, var(--jumi-animation-duration)) var(--jumi-filter-animation-timing-function, var(--jumi-animation-timing-function)) var(--jumi-filter-animation-delay, var(--jumi-animation-delay)) var(--jumi-filter-animation-iteration-count, var(--jumi-animation-iteration-count)) var(--jumi-filter-animation-direction, var(--jumi-animation-direction)) var(--jumi-filter-animation-fill-mode, var(--jumi-animation-fill-mode)) var(--jumi-filter-animation-play-state, var(--jumi-animation-play-state)) jumi-filter;
  }
  .animate-height-20 {
    --jumi-height: 5rem;
    --jumi-height-property: var(--jumi-height-animation-duration, var(--jumi-animation-duration)) var(--jumi-height-animation-timing-function, var(--jumi-animation-timing-function)) var(--jumi-height-animation-delay, var(--jumi-animation-delay)) var(--jumi-height-animation-iteration-count, var(--jumi-animation-iteration-count)) var(--jumi-height-animation-direction, var(--jumi-animation-direction)) var(--jumi-height-animation-fill-mode, var(--jumi-animation-fill-mode)) var(--jumi-height-animation-play-state, var(--jumi-animation-play-state)) jumi-height;
  }
  .animate-justify-items-safe-center {
    --jumi-justify-items: safe center;
    --jumi-justify-items-property: var(--jumi-justify-items-animation-duration, var(--jumi-animation-duration)) var(--jumi-justify-items-animation-timing-function, var(--jumi-animation-timing-function)) var(--jumi-justify-items-animation-delay, var(--jumi-animation-delay)) var(--jumi-justify-items-animation-iteration-count, var(--jumi-animation-iteration-count)) var(--jumi-justify-items-animation-direction, var(--jumi-animation-direction)) var(--jumi-justify-items-animation-fill-mode, var(--jumi-animation-fill-mode)) var(--jumi-justify-items-animation-play-state, var(--jumi-animation-play-state)) jumi-justify-items;
  }
  .animate-opacity-20 {
    --jumi-opacity: 0.2;
    --jumi-opacity-property: var(--jumi-opacity-animation-duration, var(--jumi-animation-duration)) var(--jumi-opacity-animation-timing-function, var(--jumi-animation-timing-function)) var(--jumi-opacity-animation-delay, var(--jumi-animation-delay)) var(--jumi-opacity-animation-iteration-count, var(--jumi-animation-iteration-count)) var(--jumi-opacity-animation-direction, var(--jumi-animation-direction)) var(--jumi-opacity-animation-fill-mode, var(--jumi-animation-fill-mode)) var(--jumi-opacity-animation-play-state, var(--jumi-animation-play-state)) jumi-opacity;
  }
  .animate-rotate-45 {
    --jumi-rotate: 45deg;
    --jumi-rotate-property: var(--jumi-rotate-animation-duration, var(--jumi-animation-duration)) var(--jumi-rotate-animation-timing-function, var(--jumi-animation-timing-function)) var(--jumi-rotate-animation-delay, var(--jumi-animation-delay)) var(--jumi-rotate-animation-iteration-count, var(--jumi-animation-iteration-count)) var(--jumi-rotate-animation-direction, var(--jumi-animation-direction)) var(--jumi-rotate-animation-fill-mode, var(--jumi-animation-fill-mode)) var(--jumi-rotate-animation-play-state, var(--jumi-animation-play-state)) jumi-rotate;
  }
  .animate-rotate-46 {
    --jumi-rotate: 46deg;
    --jumi-rotate-property: var(--jumi-rotate-animation-duration, var(--jumi-animation-duration)) var(--jumi-rotate-animation-timing-function, var(--jumi-animation-timing-function)) var(--jumi-rotate-animation-delay, var(--jumi-animation-delay)) var(--jumi-rotate-animation-iteration-count, var(--jumi-animation-iteration-count)) var(--jumi-rotate-animation-direction, var(--jumi-animation-direction)) var(--jumi-rotate-animation-fill-mode, var(--jumi-animation-fill-mode)) var(--jumi-rotate-animation-play-state, var(--jumi-animation-play-state)) jumi-rotate;
  }
  .animate-scale-110 {
    --jumi-scale: 1.1;
    --jumi-scale-property: var(--jumi-scale-animation-duration, var(--jumi-animation-duration)) var(--jumi-scale-animation-timing-function, var(--jumi-animation-timing-function)) var(--jumi-scale-animation-delay, var(--jumi-animation-delay)) var(--jumi-scale-animation-iteration-count, var(--jumi-animation-iteration-count)) var(--jumi-scale-animation-direction, var(--jumi-animation-direction)) var(--jumi-scale-animation-fill-mode, var(--jumi-animation-fill-mode)) var(--jumi-scale-animation-play-state, var(--jumi-animation-play-state)) jumi-scale;
  }
  .animate-scale-125 {
    --jumi-scale: 1.25;
    --jumi-scale-property: var(--jumi-scale-animation-duration, var(--jumi-animation-duration)) var(--jumi-scale-animation-timing-function, var(--jumi-animation-timing-function)) var(--jumi-scale-animation-delay, var(--jumi-animation-delay)) var(--jumi-scale-animation-iteration-count, var(--jumi-animation-iteration-count)) var(--jumi-scale-animation-direction, var(--jumi-animation-direction)) var(--jumi-scale-animation-fill-mode, var(--jumi-animation-fill-mode)) var(--jumi-scale-animation-play-state, var(--jumi-animation-play-state)) jumi-scale;
  }
  .animate-text-shadow-2xl {
    --jumi-text-shadow: 0 25px 25px rgb(0 0 0 / 0.15);
    --jumi-text-shadow-property: var(--jumi-text-shadow-animation-duration, var(--jumi-animation-duration)) var(--jumi-text-shadow-animation-timing-function, var(--jumi-animation-timing-function)) var(--jumi-text-shadow-animation-delay, var(--jumi-animation-delay)) var(--jumi-text-shadow-animation-iteration-count, var(--jumi-animation-iteration-count)) var(--jumi-text-shadow-animation-direction, var(--jumi-animation-direction)) var(--jumi-text-shadow-animation-fill-mode, var(--jumi-animation-fill-mode)) var(--jumi-text-shadow-animation-play-state, var(--jumi-animation-play-state)) jumi-text-shadow;
  }
  .animate-translate-x-\[20px\] {
    --jumi-translate-property: var(--jumi-translate-animation-duration, var(--jumi-animation-duration)) var(--jumi-translate-animation-timing-function, var(--jumi-animation-timing-function)) var(--jumi-translate-animation-delay, var(--jumi-animation-delay)) var(--jumi-translate-animation-iteration-count, var(--jumi-animation-iteration-count)) var(--jumi-translate-animation-direction, var(--jumi-animation-direction)) var(--jumi-translate-animation-fill-mode, var(--jumi-animation-fill-mode)) var(--jumi-translate-animation-play-state, var(--jumi-animation-play-state)) jumi-translate;
    --jumi-translate-x: 20px;
  }
  .animate-width-32 {
    --jumi-width: 8rem;
    --jumi-width-property: var(--jumi-width-animation-duration, var(--jumi-animation-duration)) var(--jumi-width-animation-timing-function, var(--jumi-animation-timing-function)) var(--jumi-width-animation-delay, var(--jumi-animation-delay)) var(--jumi-width-animation-iteration-count, var(--jumi-animation-iteration-count)) var(--jumi-width-animation-direction, var(--jumi-animation-direction)) var(--jumi-width-animation-fill-mode, var(--jumi-animation-fill-mode)) var(--jumi-width-animation-play-state, var(--jumi-animation-play-state)) jumi-width;
  }
  .animate-arc-bottom-right {
    --jumi-arc-bottom-right-animation: var(--jumi-arc-bottom-right-animation-duration, var(--jumi-animation-duration)) var(--jumi-arc-bottom-right-animation-timing-function, var(--jumi-animation-timing-function)) var(--jumi-arc-bottom-right-animation-delay, var(--jumi-animation-delay)) var(--jumi-arc-bottom-right-animation-iteration-count, var(--jumi-animation-iteration-count)) var(--jumi-arc-bottom-right-animation-direction, var(--jumi-animation-direction)) var(--jumi-arc-bottom-right-animation-fill-mode, var(--jumi-animation-fill-mode)) var(--jumi-arc-bottom-right-animation-play-state, var(--jumi-animation-play-state)) jumi-arc-bottom-right;
  }
  .animate-bounce-in {
    --jumi-bounce-in-animation: var(--jumi-bounce-in-animation-duration, var(--jumi-animation-duration)) var(--jumi-bounce-in-animation-timing-function, var(--jumi-animation-timing-function)) var(--jumi-bounce-in-animation-delay, var(--jumi-animation-delay)) var(--jumi-bounce-in-animation-iteration-count, var(--jumi-animation-iteration-count)) var(--jumi-bounce-in-animation-direction, var(--jumi-animation-direction)) var(--jumi-bounce-in-animation-fill-mode, var(--jumi-animation-fill-mode)) var(--jumi-bounce-in-animation-play-state, var(--jumi-animation-play-state)) jumi-bounce-in;
  }
  .animate-bubble {
    --jumi-bubble-animation: var(--jumi-bubble-animation-duration, var(--jumi-animation-duration)) var(--jumi-bubble-animation-timing-function, var(--jumi-animation-timing-function)) var(--jumi-bubble-animation-delay, var(--jumi-animation-delay)) var(--jumi-bubble-animation-iteration-count, var(--jumi-animation-iteration-count)) var(--jumi-bubble-animation-direction, var(--jumi-animation-direction)) var(--jumi-bubble-animation-fill-mode, var(--jumi-animation-fill-mode)) var(--jumi-bubble-animation-play-state, var(--jumi-animation-play-state)) jumi-bubble;
  }
  .animate-circle-in {
    --jumi-circle-in-animation: var(--jumi-circle-in-animation-duration, var(--jumi-animation-duration)) var(--jumi-circle-in-animation-timing-function, var(--jumi-animation-timing-function)) var(--jumi-circle-in-animation-delay, var(--jumi-animation-delay)) var(--jumi-circle-in-animation-iteration-count, var(--jumi-animation-iteration-count)) var(--jumi-circle-in-animation-direction, var(--jumi-animation-direction)) var(--jumi-circle-in-animation-fill-mode, var(--jumi-animation-fill-mode)) var(--jumi-circle-in-animation-play-state, var(--jumi-animation-play-state)) jumi-circle-in;
  }
  .animate-fade-in {
    --jumi-fade-in-animation: var(--jumi-fade-in-animation-duration, var(--jumi-animation-duration)) var(--jumi-fade-in-animation-timing-function, var(--jumi-animation-timing-function)) var(--jumi-fade-in-animation-delay, var(--jumi-animation-delay)) var(--jumi-fade-in-animation-iteration-count, var(--jumi-animation-iteration-count)) var(--jumi-fade-in-animation-direction, var(--jumi-animation-direction)) var(--jumi-fade-in-animation-fill-mode, var(--jumi-animation-fill-mode)) var(--jumi-fade-in-animation-play-state, var(--jumi-animation-play-state)) jumi-fade-in;
  }
  .animate-fold-in {
    --jumi-fold-in-animation: var(--jumi-fold-in-animation-duration, var(--jumi-animation-duration)) var(--jumi-fold-in-animation-timing-function, var(--jumi-animation-timing-function)) var(--jumi-fold-in-animation-delay, var(--jumi-animation-delay)) var(--jumi-fold-in-animation-iteration-count, var(--jumi-animation-iteration-count)) var(--jumi-fold-in-animation-direction, var(--jumi-animation-direction)) var(--jumi-fold-in-animation-fill-mode, var(--jumi-animation-fill-mode)) var(--jumi-fold-in-animation-play-state, var(--jumi-animation-play-state)) jumi-fold-in;
  }
  .animate-magnetic {
    --jumi-magnetic-animation: var(--jumi-magnetic-animation-duration, var(--jumi-animation-duration)) var(--jumi-magnetic-animation-timing-function, var(--jumi-animation-timing-function)) var(--jumi-magnetic-animation-delay, var(--jumi-animation-delay)) var(--jumi-magnetic-animation-iteration-count, var(--jumi-animation-iteration-count)) var(--jumi-magnetic-animation-direction, var(--jumi-animation-direction)) var(--jumi-magnetic-animation-fill-mode, var(--jumi-animation-fill-mode)) var(--jumi-magnetic-animation-play-state, var(--jumi-animation-play-state)) jumi-magnetic;
  }
  .animate-rush-in-right {
    --jumi-rush-in-right-animation: var(--jumi-rush-in-right-animation-duration, var(--jumi-animation-duration)) var(--jumi-rush-in-right-animation-timing-function, var(--jumi-animation-timing-function)) var(--jumi-rush-in-right-animation-delay, var(--jumi-animation-delay)) var(--jumi-rush-in-right-animation-iteration-count, var(--jumi-animation-iteration-count)) var(--jumi-rush-in-right-animation-direction, var(--jumi-animation-direction)) var(--jumi-rush-in-right-animation-fill-mode, var(--jumi-animation-fill-mode)) var(--jumi-rush-in-right-animation-play-state, var(--jumi-animation-play-state)) jumi-rush-in-right;
  }
  .animate-slide-in-down {
    --jumi-slide-in-down-animation: var(--jumi-slide-in-down-animation-duration, var(--jumi-animation-duration)) var(--jumi-slide-in-down-animation-timing-function, var(--jumi-animation-timing-function)) var(--jumi-slide-in-down-animation-delay, var(--jumi-animation-delay)) var(--jumi-slide-in-down-animation-iteration-count, var(--jumi-animation-iteration-count)) var(--jumi-slide-in-down-animation-direction, var(--jumi-animation-direction)) var(--jumi-slide-in-down-animation-fill-mode, var(--jumi-animation-fill-mode)) var(--jumi-slide-in-down-animation-play-state, var(--jumi-animation-play-state)) jumi-slide-in-down;
  }
  .animate-slide-in-up {
    --jumi-slide-in-up-animation: var(--jumi-slide-in-up-animation-duration, var(--jumi-animation-duration)) var(--jumi-slide-in-up-animation-timing-function, var(--jumi-animation-timing-function)) var(--jumi-slide-in-up-animation-delay, var(--jumi-animation-delay)) var(--jumi-slide-in-up-animation-iteration-count, var(--jumi-animation-iteration-count)) var(--jumi-slide-in-up-animation-direction, var(--jumi-animation-direction)) var(--jumi-slide-in-up-animation-fill-mode, var(--jumi-animation-fill-mode)) var(--jumi-slide-in-up-animation-play-state, var(--jumi-animation-play-state)) jumi-slide-in-up;
  }
  .animate-zoom-in {
    --jumi-zoom-in-animation: var(--jumi-zoom-in-animation-duration, var(--jumi-animation-duration)) var(--jumi-zoom-in-animation-timing-function, var(--jumi-animation-timing-function)) var(--jumi-zoom-in-animation-delay, var(--jumi-animation-delay)) var(--jumi-zoom-in-animation-iteration-count, var(--jumi-animation-iteration-count)) var(--jumi-zoom-in-animation-direction, var(--jumi-animation-direction)) var(--jumi-zoom-in-animation-fill-mode, var(--jumi-animation-fill-mode)) var(--jumi-zoom-in-animation-play-state, var(--jumi-animation-play-state)) jumi-zoom-in;
  }
  .animation-delay-500 {
    --jumi-animation-delay: 500ms;
  }
  .animation-delay-1000 {
    --jumi-animation-delay: 1000ms;
  }
  .animation-delay-2000\/accent-color {
    --jumi-accent-color-animation-delay: 2000ms;
  }
  .animation-direction-alternate {
    --jumi-animation-direction: alternate;
  }
  .animation-duration-1000 {
    --jumi-animation-duration: 1000ms;
  }
  .animation-duration-2000 {
    --jumi-animation-duration: 2000ms;
  }
  .animation-duration-3000 {
    --jumi-animation-duration: 3000ms;
  }
  .animation-duration-3000\/rotate {
    --jumi-rotate-animation-duration: 3000ms;
  }
  .animation-duration-6000 {
    --jumi-animation-duration: 6000ms;
  }
  .animation-iteration-count-infinite {
    --jumi-animation-iteration-count: infinite;
  }
  .animation-timing-function-ease-in-out-back {
    --jumi-animation-timing-function: cubic-bezier(0.68, -0.6, 0.32, 1.6);
  }
  .\*\:h-12 {
    :is(& > *) {
      height: calc(var(--spacing) * 12);
    }
  }
  .\*\:w-12 {
    :is(& > *) {
      width: calc(var(--spacing) * 12);
    }
  }
  .\*\:jumi {
    :is(& > *) {
      animation: var(--jumi-slide-in-up-animation, none), var(--jumi-zoom-in-animation, none);
      --jumi-animation-composition: replace;
      --jumi-animation-delay: 0s;
      --jumi-animation-direction: normal;
      --jumi-animation-duration: 1s;
      --jumi-animation-fill-mode: forwards;
      --jumi-animation-iteration-count: 1;
      --jumi-animation-play-state: running;
      --jumi-animation-timeline-scroller: nearest;
      --jumi-animation-timeline-axis: block;
      --jumi-animation-timeline-scroll: scroll(var(--jumi-animation-timeline-axis) var(--jumi-animation-timeline-scroller));
      --jumi-animation-timeline-inset-start: auto;
      --jumi-animation-timeline-inset-end: auto;
      --jumi-animation-timeline-inset: var(--jumi-animation-timeline-inset-start) var(--jumi-animation-timeline-inset-end);
      --jumi-animation-timeline-view: view(var(--jumi-animation-timeline-axis) var(--jumi-animation-timeline-inset));
      --jumi-animation-timeline: auto;
      --jumi-animation-timing-function: ease;
    }
  }
  .\*\:rounded {
    :is(& > *) {
      border-radius: 0.25rem;
    }
  }
  .\*\:bg-green-500 {
    :is(& > *) {
      background-color: var(--color-green-500);
    }
  }
  .\*\:bg-purple-500 {
    :is(& > *) {
      background-color: var(--color-purple-500);
    }
  }
  .\*\:animate-slide-in-up {
    :is(& > *) {
      --jumi-slide-in-up-animation: var(--jumi-slide-in-up-animation-duration, var(--jumi-animation-duration)) var(--jumi-slide-in-up-animation-timing-function, var(--jumi-animation-timing-function)) var(--jumi-slide-in-up-animation-delay, var(--jumi-animation-delay)) var(--jumi-slide-in-up-animation-iteration-count, var(--jumi-animation-iteration-count)) var(--jumi-slide-in-up-animation-direction, var(--jumi-animation-direction)) var(--jumi-slide-in-up-animation-fill-mode, var(--jumi-animation-fill-mode)) var(--jumi-slide-in-up-animation-play-state, var(--jumi-animation-play-state)) jumi-slide-in-up;
    }
  }
  .\*\:animate-zoom-in {
    :is(& > *) {
      --jumi-zoom-in-animation: var(--jumi-zoom-in-animation-duration, var(--jumi-animation-duration)) var(--jumi-zoom-in-animation-timing-function, var(--jumi-animation-timing-function)) var(--jumi-zoom-in-animation-delay, var(--jumi-animation-delay)) var(--jumi-zoom-in-animation-iteration-count, var(--jumi-animation-iteration-count)) var(--jumi-zoom-in-animation-direction, var(--jumi-animation-direction)) var(--jumi-zoom-in-animation-fill-mode, var(--jumi-animation-fill-mode)) var(--jumi-zoom-in-animation-play-state, var(--jumi-animation-play-state)) jumi-zoom-in;
    }
  }
  .\*\:animation-direction-alternate {
    :is(& > *) {
      --jumi-animation-direction: alternate;
    }
  }
  .\*\:animation-duration-1500 {
    :is(& > *) {
      --jumi-animation-duration: 1500ms;
    }
  }
  .\*\:animation-duration-3000 {
    :is(& > *) {
      --jumi-animation-duration: 3000ms;
    }
  }
  .\*\:animation-iteration-count-infinite {
    :is(& > *) {
      --jumi-animation-iteration-count: infinite;
    }
  }
  .not-sm\:animate-accent-color-amber-400 {
    @media not (width >= 40rem) {
      --jumi-accent-color: oklch(82.8% 0.189 84.429);
      --jumi-accent-color-property: var(--jumi-accent-color-animation-duration, var(--jumi-animation-duration)) var(--jumi-accent-color-animation-timing-function, var(--jumi-animation-timing-function)) var(--jumi-accent-color-animation-delay, var(--jumi-animation-delay)) var(--jumi-accent-color-animation-iteration-count, var(--jumi-animation-iteration-count)) var(--jumi-accent-color-animation-direction, var(--jumi-animation-direction)) var(--jumi-accent-color-animation-fill-mode, var(--jumi-animation-fill-mode)) var(--jumi-accent-color-animation-play-state, var(--jumi-animation-play-state)) jumi-accent-color;
    }
  }
  .before\:absolute {
    &::before {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .before\:top-0 {
    &::before {
      content: var(--tw-content);
      top: calc(var(--spacing) * 0);
    }
  }
  .before\:right-0 {
    &::before {
      content: var(--tw-content);
      right: calc(var(--spacing) * 0);
    }
  }
  .before\:bottom-0 {
    &::before {
      content: var(--tw-content);
      bottom: calc(var(--spacing) * 0);
    }
  }
  .before\:left-0 {
    &::before {
      content: var(--tw-content);
      left: calc(var(--spacing) * 0);
    }
  }
  .before\:h-0 {
    &::before {
      content: var(--tw-content);
      height: calc(var(--spacing) * 0);
    }
  }
  .before\:w-0 {
    &::before {
      content: var(--tw-content);
      width: calc(var(--spacing) * 0);
    }
  }
  .before\:jumi {
    &::before {
      content: var(--tw-content);
      animation: var(--jumi-backdrop-filter-property, none), var(--jumi-background-color-property, none), var(--jumi-border-radius-property, none), var(--jumi-color-property, none), var(--jumi-fill-property, none), var(--jumi-filter-property, none), var(--jumi-height-property, none), var(--jumi-justify-items-property, none), var(--jumi-opacity-property, none), var(--jumi-rotate-property, none), var(--jumi-scale-property, none), var(--jumi-text-shadow-property, none), var(--jumi-translate-property, none), var(--jumi-width-property, none), var(--jumi-arc-bottom-right-animation, none), var(--jumi-bounce-in-animation, none), var(--jumi-bounce-in-down-animation, none), var(--jumi-bounce-in-up-animation, none), var(--jumi-bubble-animation, none), var(--jumi-circle-in-animation, none), var(--jumi-fade-in-animation, none), var(--jumi-fold-in-animation, none), var(--jumi-magnetic-animation, none), var(--jumi-rush-in-right-animation, none), var(--jumi-slide-in-down-animation, none), var(--jumi-slide-in-up-animation, none), var(--jumi-zoom-in-animation, none);
      --jumi-animation-composition: replace;
      --jumi-animation-delay: 0s;
      --jumi-animation-direction: normal;
      --jumi-animation-duration: 1s;
      --jumi-animation-fill-mode: forwards;
      --jumi-animation-iteration-count: 1;
      --jumi-animation-play-state: running;
      --jumi-animation-timeline-scroller: nearest;
      --jumi-animation-timeline-axis: block;
      --jumi-animation-timeline-scroll: scroll(var(--jumi-animation-timeline-axis) var(--jumi-animation-timeline-scroller));
      --jumi-animation-timeline-inset-start: auto;
      --jumi-animation-timeline-inset-end: auto;
      --jumi-animation-timeline-inset: var(--jumi-animation-timeline-inset-start) var(--jumi-animation-timeline-inset-end);
      --jumi-animation-timeline-view: view(var(--jumi-animation-timeline-axis) var(--jumi-animation-timeline-inset));
      --jumi-animation-timeline: auto;
      --jumi-animation-timing-function: ease;
      --jumi-backdrop-filter-blur: blur(0);
      --jumi-backdrop-filter-brightness: brightness(1);
      --jumi-backdrop-filter-contrast: contrast(1);
      --jumi-backdrop-filter-drop-shadow-offset-x: 0;
      --jumi-backdrop-filter-drop-shadow-offset-y: 0;
      --jumi-backdrop-filter-drop-shadow-blur: 0;
      --jumi-backdrop-filter-drop-shadow-color: transparent;
      --jumi-backdrop-filter-drop-shadow: drop-shadow(var(--jumi-backdrop-filter-drop-shadow-offset-x) var(--jumi-backdrop-filter-drop-shadow-offset-y) var(--jumi-backdrop-filter-drop-shadow-blur) var(--jumi-backdrop-filter-drop-shadow-color));
      --jumi-backdrop-filter-grayscale: grayscale(0);
      --jumi-backdrop-filter-hue-rotate: hue-rotate(0deg);
      --jumi-backdrop-filter-invert: invert(0);
      --jumi-backdrop-filter-opacity: opacity(1);
      --jumi-backdrop-filter-saturate: saturate(1);
      --jumi-backdrop-filter-sepia: sepia(0);
      --jumi-backdrop-filter: var(--jumi-backdrop-filter-blur) var(--jumi-backdrop-filter-brightness) var(--jumi-backdrop-filter-contrast) var(--jumi-backdrop-filter-drop-shadow) var(--jumi-backdrop-filter-grayscale) var(--jumi-backdrop-filter-hue-rotate) var(--jumi-backdrop-filter-invert) var(--jumi-backdrop-filter-opacity) var(--jumi-backdrop-filter-saturate) var(--jumi-backdrop-filter-sepia);
      --jumi-background-color: transparent;
      --jumi-border-top-left-radius: 0;
      --jumi-border-top-right-radius: 0;
      --jumi-border-bottom-right-radius: 0;
      --jumi-border-bottom-left-radius: 0;
      --jumi-border-radius: var(--jumi-border-top-left-radius) var(--jumi-border-top-right-radius) var(--jumi-border-bottom-right-radius) var(--jumi-border-bottom-left-radius);
      --jumi-color: canvastext;
      --jumi-fill: black;
      --jumi-filter-blur: blur(0);
      --jumi-filter-brightness: brightness(1);
      --jumi-filter-contrast: contrast(1);
      --jumi-filter-grayscale: grayscale(0);
      --jumi-filter-hue-rotate: hue-rotate(0deg);
      --jumi-filter-invert: invert(0);
      --jumi-filter-saturate: saturate(1);
      --jumi-filter-sepia: sepia(0);
      --jumi-filter-opacity: opacity(1);
      --jumi-filter-drop-shadow-offset-x: 0;
      --jumi-filter-drop-shadow-offset-y: 0;
      --jumi-filter-drop-shadow-blur: 0;
      --jumi-filter-drop-shadow-color: transparent;
      --jumi-filter-drop-shadow: drop-shadow(var(--jumi-filter-drop-shadow-offset-x) var(--jumi-filter-drop-shadow-offset-y) var(--jumi-filter-drop-shadow-blur) var(--jumi-filter-drop-shadow-color));
      --jumi-filter: var(--jumi-filter-blur) var(--jumi-filter-brightness) var(--jumi-filter-contrast) var(--jumi-filter-grayscale) var(--jumi-filter-hue-rotate) var(--jumi-filter-invert) var(--jumi-filter-saturate) var(--jumi-filter-sepia) var(--jumi-filter-opacity) var(--jumi-filter-drop-shadow);
      --jumi-height: auto;
      --jumi-justify-items: legacy;
      --jumi-opacity: 1;
      --jumi-rotate-x: 0;
      --jumi-rotate-y: 0;
      --jumi-rotate-z: 1;
      --jumi-rotate-angle: 0deg;
      --jumi-rotate: var(--jumi-rotate-x) var(--jumi-rotate-y) var(--jumi-rotate-z) var(--jumi-rotate-angle);
      --jumi-scale-x: 1;
      --jumi-scale-y: 1;
      --jumi-scale-z: 1;
      --jumi-scale: var(--jumi-scale-x) var(--jumi-scale-y) var(--jumi-scale-z);
      --jumi-text-shadow-offset-x: 0px;
      --jumi-text-shadow-offset-y: 0px;
      --jumi-text-shadow-blur: 0;
      --jumi-text-shadow-color: currentColor;
      --jumi-text-shadow: var(--jumi-text-shadow-offset-x) var(--jumi-text-shadow-offset-y) var(--jumi-text-shadow-blur) var(--jumi-text-shadow-color);
      --jumi-translate-x: 0px;
      --jumi-translate-y: 0px;
      --jumi-translate-z: 0px;
      --jumi-translate: var(--jumi-translate-x) var(--jumi-translate-y) var(--jumi-translate-z);
      --jumi-width: auto;
    }
  }
  .before\:border-t-4 {
    &::before {
      content: var(--tw-content);
      border-top-style: var(--tw-border-style);
      border-top-width: 4px;
    }
  }
  .before\:border-t-8 {
    &::before {
      content: var(--tw-content);
      border-top-style: var(--tw-border-style);
      border-top-width: 8px;
    }
  }
  .before\:border-r-4 {
    &::before {
      content: var(--tw-content);
      border-right-style: var(--tw-border-style);
      border-right-width: 4px;
    }
  }
  .before\:border-b-2 {
    &::before {
      content: var(--tw-content);
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 2px;
    }
  }
  .before\:border-b-4 {
    &::before {
      content: var(--tw-content);
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 4px;
    }
  }
  .before\:border-l-4 {
    &::before {
      content: var(--tw-content);
      border-left-style: var(--tw-border-style);
      border-left-width: 4px;
    }
  }
  .before\:border-white {
    &::before {
      content: var(--tw-content);
      border-color: var(--color-white);
    }
  }
  .before\:animate-height-full {
    &::before {
      content: var(--tw-content);
      --jumi-height: 100%;
      --jumi-height-property: var(--jumi-height-animation-duration, var(--jumi-animation-duration)) var(--jumi-height-animation-timing-function, var(--jumi-animation-timing-function)) var(--jumi-height-animation-delay, var(--jumi-animation-delay)) var(--jumi-height-animation-iteration-count, var(--jumi-animation-iteration-count)) var(--jumi-height-animation-direction, var(--jumi-animation-direction)) var(--jumi-height-animation-fill-mode, var(--jumi-animation-fill-mode)) var(--jumi-height-animation-play-state, var(--jumi-animation-play-state)) jumi-height;
    }
  }
  .before\:animate-width-full {
    &::before {
      content: var(--tw-content);
      --jumi-width: 100%;
      --jumi-width-property: var(--jumi-width-animation-duration, var(--jumi-animation-duration)) var(--jumi-width-animation-timing-function, var(--jumi-animation-timing-function)) var(--jumi-width-animation-delay, var(--jumi-animation-delay)) var(--jumi-width-animation-iteration-count, var(--jumi-animation-iteration-count)) var(--jumi-width-animation-direction, var(--jumi-animation-direction)) var(--jumi-width-animation-fill-mode, var(--jumi-animation-fill-mode)) var(--jumi-width-animation-play-state, var(--jumi-animation-play-state)) jumi-width;
    }
  }
  .before\:animation-delay-500 {
    &::before {
      content: var(--tw-content);
      --jumi-animation-delay: 500ms;
    }
  }
  .before\:animation-delay-1000 {
    &::before {
      content: var(--tw-content);
      --jumi-animation-delay: 1000ms;
    }
  }
  .before\:animation-delay-1500 {
    &::before {
      content: var(--tw-content);
      --jumi-animation-delay: 1500ms;
    }
  }
  .before\:animation-direction-alternate {
    &::before {
      content: var(--tw-content);
      --jumi-animation-direction: alternate;
    }
  }
  .before\:animation-duration-1000 {
    &::before {
      content: var(--tw-content);
      --jumi-animation-duration: 1000ms;
    }
  }
  .before\:animation-duration-2000 {
    &::before {
      content: var(--tw-content);
      --jumi-animation-duration: 2000ms;
    }
  }
  .before\:animation-duration-3000 {
    &::before {
      content: var(--tw-content);
      --jumi-animation-duration: 3000ms;
    }
  }
  .before\:animation-iteration-count-infinite {
    &::before {
      content: var(--tw-content);
      --jumi-animation-iteration-count: infinite;
    }
  }
  .hover\:animate-accent-color-amber-100 {
    &:hover {
      @media (hover: hover) {
        --jumi-accent-color: oklch(96.2% 0.059 95.617);
        --jumi-accent-color-property: var(--jumi-accent-color-animation-duration, var(--jumi-animation-duration)) var(--jumi-accent-color-animation-timing-function, var(--jumi-animation-timing-function)) var(--jumi-accent-color-animation-delay, var(--jumi-animation-delay)) var(--jumi-accent-color-animation-iteration-count, var(--jumi-animation-iteration-count)) var(--jumi-accent-color-animation-direction, var(--jumi-animation-direction)) var(--jumi-accent-color-animation-fill-mode, var(--jumi-animation-fill-mode)) var(--jumi-accent-color-animation-play-state, var(--jumi-animation-play-state)) jumi-accent-color;
      }
    }
  }
  .hover\:before\:animate-width-full {
    &:hover {
      @media (hover: hover) {
        &::before {
          content: var(--tw-content);
          --jumi-width: 100%;
          --jumi-width-property: var(--jumi-width-animation-duration, var(--jumi-animation-duration)) var(--jumi-width-animation-timing-function, var(--jumi-animation-timing-function)) var(--jumi-width-animation-delay, var(--jumi-animation-delay)) var(--jumi-width-animation-iteration-count, var(--jumi-animation-iteration-count)) var(--jumi-width-animation-direction, var(--jumi-animation-direction)) var(--jumi-width-animation-fill-mode, var(--jumi-animation-fill-mode)) var(--jumi-width-animation-play-state, var(--jumi-animation-play-state)) jumi-width;
        }
      }
    }
  }
  .\*\:nth-\[even\]\:animate-bounce-in-up {
    :is(& > *) {
      &:nth-child(even) {
        --jumi-bounce-in-up-animation: var(--jumi-bounce-in-up-animation-duration, var(--jumi-animation-duration)) var(--jumi-bounce-in-up-animation-timing-function, var(--jumi-animation-timing-function)) var(--jumi-bounce-in-up-animation-delay, var(--jumi-animation-delay)) var(--jumi-bounce-in-up-animation-iteration-count, var(--jumi-animation-iteration-count)) var(--jumi-bounce-in-up-animation-direction, var(--jumi-animation-direction)) var(--jumi-bounce-in-up-animation-fill-mode, var(--jumi-animation-fill-mode)) var(--jumi-bounce-in-up-animation-play-state, var(--jumi-animation-play-state)) jumi-bounce-in-up;
      }
    }
  }
  .\*\:nth-\[odd\]\:animate-bounce-in-down {
    :is(& > *) {
      &:nth-child(odd) {
        --jumi-bounce-in-down-animation: var(--jumi-bounce-in-down-animation-duration, var(--jumi-animation-duration)) var(--jumi-bounce-in-down-animation-timing-function, var(--jumi-animation-timing-function)) var(--jumi-bounce-in-down-animation-delay, var(--jumi-animation-delay)) var(--jumi-bounce-in-down-animation-iteration-count, var(--jumi-animation-iteration-count)) var(--jumi-bounce-in-down-animation-direction, var(--jumi-animation-direction)) var(--jumi-bounce-in-down-animation-fill-mode, var(--jumi-animation-fill-mode)) var(--jumi-bounce-in-down-animation-play-state, var(--jumi-animation-play-state)) jumi-bounce-in-down;
      }
    }
  }
  .md\:grid-cols-2 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-3 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-4 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
}
@keyframes jumi-slide-in-up {
  0% {
    opacity: 0;
    transform: translate3d(0, 100%, 0);
    visibility: visible;
  }
  100% {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}
@keyframes jumi-zoom-in {
  0% {
    opacity: 0;
    transform: scale3d(0.3, 0.3, 0.3);
  }
  50% {
    opacity: 1;
    transform: scale3d(1.08, 1.08, 1.08);
  }
  100% {
    opacity: 1;
    transform: scale3d(1, 1, 1);
  }
}
@keyframes jumi-bounce-in-up {
  0% {
    opacity: 0;
    transform: translate3d(0, 100px, 0);
  }
  50% {
    opacity: 1;
    transform: translate3d(0, -10px, 0);
  }
  100% {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}
@keyframes jumi-bounce-in-down {
  0% {
    opacity: 0;
    transform: translate3d(0, -100px, 0);
  }
  50% {
    opacity: 1;
    transform: translate3d(0, 10px, 0);
  }
  100% {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}
@keyframes jumi-arc-bottom-right {
  0% {
    opacity: 0;
    rotate: -90deg;
    transform-origin: bottom;
    translate-x: 45px;
    translate-y: -45px;
  }
  100% {
    opacity: 1;
    rotate: 0deg;
    transform-origin: bottom;
    translate-x: 0px;
    translate-y: 0px;
  }
}
@keyframes jumi-backdrop-filter {
  to {
    backdrop-filter: var(--jumi-backdrop-filter);
  }
}
@keyframes jumi-background-color {
  to {
    background-color: var(--jumi-background-color);
  }
}
@keyframes jumi-border-radius {
  to {
    border-radius: var(--jumi-border-radius);
  }
}
@keyframes jumi-bounce-in {
  0% {
    opacity: 0;
    transform: scale3d(0.3, 0.3, 0.3);
  }
  50% {
    opacity: 1;
    transform: scale3d(1.1, 1.1, 1.1);
  }
  100% {
    opacity: 1;
    transform: scale3d(1, 1, 1);
  }
}
@keyframes jumi-bubble {
  0% {
    border-radius: 50%;
    opacity: 0;
    transform: scale(0) translateY(50px);
  }
  50% {
    border-radius: 60% 40% 50% 50%;
    opacity: 0.7;
    transform: scale(0.8) translateY(-10px);
  }
  100% {
    border-radius: 50%;
    opacity: 1;
    transform: scale(1) translateY(0);
  }
}
@keyframes jumi-circle-in {
  0% {
    clip-path: circle(0% at 50% 50%);
  }
  100% {
    clip-path: circle(100% at 50% 50%);
  }
}
@keyframes jumi-color {
  to {
    color: var(--jumi-color);
  }
}
@keyframes jumi-fade-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
@keyframes jumi-fill {
  to {
    fill: var(--jumi-fill);
  }
}
@keyframes jumi-filter {
  to {
    filter: var(--jumi-filter);
  }
}
@keyframes jumi-fold-in {
  0% {
    opacity: 0;
    transform: scaleY(0) rotateX(-90deg);
    transform-origin: bottom;
  }
  50% {
    opacity: 0.7;
    transform: scaleY(0.5) rotateX(-45deg);
  }
  100% {
    opacity: 1;
    transform: scaleY(1) rotateX(0deg);
  }
}
@keyframes jumi-height {
  to {
    height: var(--jumi-height);
  }
}
@keyframes jumi-justify-items {
  to {
    justify-items: var(--jumi-justify-items);
  }
}
@keyframes jumi-magnetic {
  0% {
    transform: translateX(0) scale(1);
  }
  30% {
    transform: translateX(-15px) scale(1.1);
  }
  60% {
    transform: translateX(10px) scale(0.9);
  }
  100% {
    transform: translateX(0) scale(1);
  }
}
@keyframes jumi-opacity {
  to {
    opacity: var(--jumi-opacity);
  }
}
@keyframes jumi-rotate {
  to {
    rotate: var(--jumi-rotate);
  }
}
@keyframes jumi-rush-in-right {
  0% {
    opacity: 0;
    transform: translateX(200px) skewX(-30deg) scale(0.8);
  }
  60% {
    opacity: 1;
    transform: translateX(-20px) skewX(5deg) scale(1.05);
  }
  80% {
    transform: translateX(5px) skewX(-2deg) scale(0.98);
  }
  100% {
    opacity: 1;
    transform: translateX(0) skewX(0deg) scale(1);
  }
}
@keyframes jumi-scale {
  to {
    scale: var(--jumi-scale);
  }
}
@keyframes jumi-slide-in-down {
  0% {
    opacity: 0;
    transform: translate3d(0, -100%, 0);
    visibility: visible;
  }
  100% {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}
@keyframes jumi-text-shadow {
  to {
    text-shadow: var(--jumi-text-shadow);
  }
}
@keyframes jumi-translate {
  to {
    translate: var(--jumi-translate);
  }
}
@keyframes jumi-width {
  to {
    width: var(--jumi-width);
  }
}
@keyframes jumi-accent-color {
  to {
    accent-color: var(--jumi-accent-color);
  }
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-space-y-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-content: "";
    }
  }
}
