*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

/*
! tailwindcss v3.4.17 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden]:where(:not([hidden="until-found"])) {
  display: none;
}

@keyframes jumi-align-content {
  to {
    align-content: var(--jumi-align-content);
  }
}

@keyframes jumi-align-items {
  to {
    align-items: var(--jumi-align-items);
  }
}

@keyframes jumi-align-self {
  to {
    align-self: var(--jumi-align-self);
  }
}

@keyframes jumi-alignment-baseline {
  to {
    alignment-baseline: var(--jumi-alignment-baseline);
  }
}

@keyframes jumi-backdrop-filter {
  to {
    -webkit-backdrop-filter: var(--jumi-backdrop-filter);
            backdrop-filter: var(--jumi-backdrop-filter);
  }
}

@keyframes jumi-background-color {
  to {
    background-color: var(--jumi-background-color);
  }
}

@keyframes jumi-background-position {
  to {
    background-position: var(--jumi-background-position);
  }
}

@keyframes jumi-background-size {
  to {
    background-size: var(--jumi-background-size);
  }
}

@keyframes jumi-border-block-end-radius {
  to {
    border-end-end-radius: var(--jumi-border-end-end-radius);
    border-end-start-radius: var(--jumi-border-end-start-radius);
  }
}

@keyframes jumi-border-block-end-width {
  to {
    border-block-end-width: var(--jumi-border-block-end-width);
  }
}

@keyframes jumi-border-block-start-radius {
  to {
    border-start-end-radius: var(--jumi-border-start-end-radius);
    border-start-start-radius: var(--jumi-border-start-start-radius);
  }
}

@keyframes jumi-border-block-start-width {
  to {
    border-block-start-width: var(--jumi-border-block-start-width);
  }
}

@keyframes jumi-border-block-width {
  to {
    border-block-end-width: var(--jumi-border-block-end-width);
    border-block-start-width: var(--jumi-border-block-start-width);
  }
}

@keyframes jumi-border-bottom-left-radius {
  to {
    border-bottom-left-radius: var(--jumi-border-bottom-left-radius);
  }
}

@keyframes jumi-border-bottom-length {
  from {
    width: 0%;
  }

  to {
    width: 100%;
  }
}

@keyframes jumi-border-bottom-radius {
  to {
    border-bottom-left-radius: var(--jumi-border-bottom-left-radius);
    border-bottom-right-radius: var(--jumi-border-bottom-right-radius);
  }
}

@keyframes jumi-border-bottom-right-radius {
  to {
    border-bottom-right-radius: var(--jumi-border-bottom-right-radius);
  }
}

@keyframes jumi-border-bottom-width {
  to {
    border-bottom-width: var(--jumi-border-bottom-width);
  }
}

@keyframes jumi-border-color {
  to {
    border-color: var(--jumi-border-color);
  }
}

@keyframes jumi-border-end-end-radius {
  to {
    border-end-end-radius: var(--jumi-border-end-end-radius);
  }
}

@keyframes jumi-border-end-start-radius {
  to {
    border-end-start-radius: var(--jumi-border-end-start-radius);
  }
}

@keyframes jumi-border-inline-end-radius {
  to {
    border-end-end-radius: var(--jumi-border-end-end-radius);
    border-start-end-radius: var(--jumi-border-start-end-radius);
  }
}

@keyframes jumi-border-inline-end-width {
  to {
    border-inline-end-width: var(--jumi-border-inline-end-width);
  }
}

@keyframes jumi-border-inline-start-radius {
  to {
    border-end-start-radius: var(--jumi-border-end-start-radius);
    border-start-start-radius: var(--jumi-border-start-start-radius);
  }
}

@keyframes jumi-border-inline-start-width {
  to {
    border-inline-start-width: var(--jumi-border-inline-start-width);
  }
}

@keyframes jumi-border-inline-width {
  to {
    border-inline-end-width: var(--jumi-border-inline-end-width);
    border-inline-start-width: var(--jumi-border-inline-start-width);
  }
}

@keyframes jumi-border-left-length {
  from {
    height: 0%;
  }

  to {
    height: 100%;
  }
}

@keyframes jumi-border-left-radius {
  to {
    border-bottom-left-radius: var(--jumi-border-bottom-left-radius);
    border-top-left-radius: var(--jumi-border-top-left-radius);
  }
}

@keyframes jumi-border-left-width {
  to {
    border-left-width: var(--jumi-border-left-width);
  }
}

@keyframes jumi-border-radius {
  to {
    border-radius: var(--jumi-border-radius);
  }
}

@keyframes jumi-border-right-length {
  from {
    height: 0%;
  }

  to {
    height: 100%;
  }
}

@keyframes jumi-border-right-radius {
  to {
    border-bottom-right-radius: var(--jumi-border-bottom-right-radius);
    border-top-right-radius: var(--jumi-border-top-right-radius);
  }
}

@keyframes jumi-border-right-width {
  to {
    border-right-width: var(--jumi-border-right-width);
  }
}

@keyframes jumi-border-start-end-radius {
  to {
    border-start-end-radius: var(--jumi-border-start-end-radius);
  }
}

@keyframes jumi-border-start-start-radius {
  to {
    border-start-start-radius: var(--jumi-border-start-start-radius);
  }
}

@keyframes jumi-border-top-left-radius {
  to {
    border-top-left-radius: var(--jumi-border-top-left-radius);
  }
}

@keyframes jumi-border-top-length {
  from {
    width: 0%;
  }

  to {
    width: 100%;
  }
}

@keyframes jumi-border-top-radius {
  to {
    border-top-left-radius: var(--jumi-border-top-left-radius);
    border-top-right-radius: var(--jumi-border-top-right-radius);
  }
}

@keyframes jumi-border-top-right-radius {
  to {
    border-top-right-radius: var(--jumi-border-top-right-radius);
  }
}

@keyframes jumi-border-top-width {
  to {
    border-top-width: var(--jumi-border-top-width);
  }
}

@keyframes jumi-border-width {
  to {
    border-width: var(--jumi-border-width);
  }
}

@keyframes jumi-bottom {
  to {
    bottom: var(--jumi-bottom);
  }
}

@keyframes jumi-color {
  to {
    color: var(--jumi-color);
  }
}

@keyframes jumi-filter {
  to {
    filter: var(--jumi-filter);
  }
}

@keyframes jumi-flex-basis {
  to {
    flex-basis: var(--jumi-flex-basis);
  }
}

@keyframes jumi-flex-grow {
  to {
    flex-grow: var(--jumi-flex-grow);
  }
}

@keyframes jumi-flex-shrink {
  to {
    flex-shrink: var(--jumi-flex-shrink);
  }
}

@keyframes jumi-font-size {
  to {
    font-size: var(--jumi-font-size);
  }
}

@keyframes jumi-font-weight {
  to {
    font-weight: var(--jumi-font-weight);
  }
}

@keyframes jumi-gap {
  to {
    gap: var(--jumi-gap);
  }
}

@keyframes jumi-height {
  to {
    height: var(--jumi-height);
  }
}

@keyframes jumi-left {
  to {
    left: var(--jumi-left);
  }
}

@keyframes jumi-letter-spacing {
  to {
    letter-spacing: var(--jumi-letter-spacing);
  }
}

@keyframes jumi-line-height {
  to {
    line-height: var(--jumi-line-height);
  }
}

@keyframes jumi-margin {
  to {
    margin: var(--jumi-margin);
  }
}

@keyframes jumi-margin-block {
  to {
    margin-bottom: var(--jumi-margin-block);
    margin-top: var(--jumi-margin-block);
  }
}

@keyframes jumi-margin-bottom {
  to {
    margin-bottom: var(--jumi-margin-bottom);
  }
}

@keyframes jumi-margin-inline {
  to {
    margin-left: var(--jumi-margin-inline);
    margin-right: var(--jumi-margin-inline);
  }
}

@keyframes jumi-margin-left {
  to {
    margin-left: var(--jumi-margin-left);
  }
}

@keyframes jumi-margin-right {
  to {
    margin-right: var(--jumi-margin-right);
  }
}

@keyframes jumi-margin-top {
  to {
    margin-top: var(--jumi-margin-top);
  }
}

@keyframes jumi-min-width {
  to {
    min-width: var(--jumi-min-width);
  }
}

@keyframes jumi-opacity {
  to {
    opacity: var(--jumi-opacity);
  }
}

@keyframes jumi-order {
  to {
    order: var(--jumi-order);
  }
}

@keyframes jumi-outline-color {
  to {
    outline-color: var(--jumi-outline-color);
  }
}

@keyframes jumi-outline-offset {
  to {
    outline-offset: var(--jumi-outline-offset);
  }
}

@keyframes jumi-outline-width {
  to {
    outline-width: var(--jumi-outline-width);
  }
}

@keyframes jumi-padding {
  to {
    padding: var(--jumi-padding);
  }
}

@keyframes jumi-padding-block {
  to {
    padding-bottom: var(--jumi-padding-block);
    padding-top: var(--jumi-padding-block);
  }
}

@keyframes jumi-padding-bottom {
  to {
    padding-bottom: var(--jumi-padding-bottom);
  }
}

@keyframes jumi-padding-inline {
  to {
    padding-left: var(--jumi-padding-inline);
    padding-right: var(--jumi-padding-inline);
  }
}

@keyframes jumi-padding-left {
  to {
    padding-left: var(--jumi-padding-left);
  }
}

@keyframes jumi-padding-right {
  to {
    padding-right: var(--jumi-padding-right);
  }
}

@keyframes jumi-padding-top {
  to {
    padding-top: var(--jumi-padding-top);
  }
}

@keyframes jumi-right {
  to {
    right: var(--jumi-right);
  }
}

@keyframes jumi-shadow {
  to {
    box-shadow: var(--jumi-shadow);
  }
}

@keyframes jumi-text-shadow {
  to {
    text-shadow: var(--jumi-text-shadow);
  }
}

@keyframes jumi-top {
  to {
    top: var(--jumi-top);
  }
}

@keyframes jumi-width {
  to {
    width: var(--jumi-width);
  }
}

@keyframes jumi-z-index {
  to {
    z-index: var(--jumi-z-index);
  }
}

@keyframes back-in {
  0% {
    transform: scale(0) rotateZ(-360deg);
  }

  100% {
    transform: scale(1) rotateZ(0deg);
  }
}

@keyframes back-in-down {
  0% {
    transform: scale(0) translateY(-2000px) rotateZ(-360deg);
  }

  100% {
    transform: scale(1) translateY(0) rotateZ(0deg);
  }
}

@keyframes back-in-left {
  0% {
    transform: scale(0) translateX(-2000px) rotateZ(-360deg);
  }

  100% {
    transform: scale(1) translateX(0) rotateZ(0deg);
  }
}

@keyframes back-in-right {
  0% {
    transform: scale(0) translateX(2000px) rotateZ(360deg);
  }

  100% {
    transform: scale(1) translateX(0) rotateZ(0deg);
  }
}

@keyframes back-in-up {
  0% {
    transform: scale(0) translateY(2000px) rotateZ(360deg);
  }

  100% {
    transform: scale(1) translateY(0) rotateZ(0deg);
  }
}

@keyframes back-out {
  0% {
    transform: scale(1) rotateZ(0deg);
  }

  100% {
    transform: scale(0) rotateZ(360deg);
  }
}

@keyframes back-out-down {
  0% {
    transform: scale(1) translateY(0) rotateZ(0deg);
  }

  100% {
    transform: scale(0) translateY(2000px) rotateZ(360deg);
  }
}

@keyframes back-out-left {
  0% {
    transform: scale(1) translateX(0) rotateZ(0deg);
  }

  100% {
    transform: scale(0) translateX(-2000px) rotateZ(-360deg);
  }
}

@keyframes back-out-right {
  0% {
    transform: scale(1) translateX(0) rotateZ(0deg);
  }

  100% {
    transform: scale(0) translateX(2000px) rotateZ(360deg);
  }
}

@keyframes back-out-up {
  0% {
    transform: scale(1) translateY(0) rotateZ(0deg);
  }

  100% {
    transform: scale(0) translateY(-2000px) rotateZ(-360deg);
  }
}

@keyframes bounce-in {
  0% {
    transform: scale3d(0.3, 0.3, 0.3);
  }

  20% {
    transform: scale3d(1.1, 1.1, 1.1);
  }

  40% {
    transform: scale3d(0.9, 0.9, 0.9);
  }

  60% {
    transform: scale3d(1.03, 1.03, 1.03);
  }

  80% {
    transform: scale3d(0.97, 0.97, 0.97);
  }

  from, 20%, 40%, 60%, 80%, to {
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
  }

  to {
    transform: scale3d(1, 1, 1);
  }
}

@keyframes bounce-out {
  20% {
    transform: scale3d(0.9, 0.9, 0.9);
  }

  50%, 55% {
    transform: scale3d(1.1, 1.1, 1.1);
  }

  to {
    transform: scale3d(0.3, 0.3, 0.3);
  }
}

@keyframes fade-down {
  from {
    opacity: 0;
    transform: translate3d(0, -40px, 0);
  }

  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@keyframes fade-down-left {
  from {
    opacity: 0;
    transform: translate3d(-40px, -40px, 0);
  }

  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@keyframes fade-down-right {
  from {
    opacity: 0;
    transform: translate3d(40px, -40px, 0);
  }

  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@keyframes fade-in {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes fade-left {
  from {
    opacity: 0;
    transform: translate3d(-40px, 0, 0);
  }

  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@keyframes fade-out {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}

@keyframes fade-right {
  from {
    opacity: 0;
    transform: translate3d(40px, 0, 0);
  }

  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@keyframes fade-up {
  from {
    opacity: 0;
    transform: translate3d(0, 40px, 0);
  }

  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@keyframes fade-up-left {
  from {
    opacity: 0;
    transform: translate3d(-40px, 40px, 0);
  }

  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@keyframes fade-up-right {
  from {
    opacity: 0;
    transform: translate3d(40px, 40px, 0);
  }

  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@keyframes flip-down {
  40% {
    animation-timing-function: ease-in;
    transform: perspective(400px) rotateX(20deg);
  }

  60% {
    opacity: 1;
    transform: perspective(400px) rotateX(-10deg);
  }

  80% {
    transform: perspective(400px) rotateX(5deg);
  }

  from {
    animation-timing-function: ease-in;
    opacity: 0;
    transform: perspective(400px) rotateX(-90deg);
  }

  to {
    transform: perspective(400px);
  }
}

@keyframes flip-left {
  40% {
    animation-timing-function: ease-in;
    transform: perspective(400px) rotateY(20deg);
  }

  60% {
    opacity: 1;
    transform: perspective(400px) rotateY(-10deg);
  }

  80% {
    transform: perspective(400px) rotateY(5deg);
  }

  from {
    animation-timing-function: ease-in;
    opacity: 0;
    transform: perspective(400px) rotateY(-90deg);
  }

  to {
    transform: perspective(400px);
  }
}

@keyframes flip-right {
  40% {
    animation-timing-function: ease-in;
    transform: perspective(400px) rotateY(-20deg);
  }

  60% {
    opacity: 1;
    transform: perspective(400px) rotateY(10deg);
  }

  80% {
    transform: perspective(400px) rotateY(-5deg);
  }

  from {
    animation-timing-function: ease-in;
    opacity: 0;
    transform: perspective(400px) rotateY(90deg);
  }

  to {
    transform: perspective(400px);
  }
}

@keyframes flip-up {
  40% {
    animation-timing-function: ease-in;
    transform: perspective(400px) rotateX(-20deg);
  }

  60% {
    opacity: 1;
    transform: perspective(400px) rotateX(10deg);
  }

  80% {
    transform: perspective(400px) rotateX(-5deg);
  }

  from {
    animation-timing-function: ease-in;
    opacity: 0;
    transform: perspective(400px) rotateX(90deg);
  }

  to {
    transform: perspective(400px);
  }
}

@keyframes flip-x {
  40% {
    animation-timing-function: ease-in;
    transform: perspective(400px) rotateX(-20deg);
  }

  60% {
    transform: perspective(400px) rotateX(10deg);
  }

  80% {
    transform: perspective(400px) rotateX(-5deg);
  }

  from {
    animation-timing-function: ease-in;
    transform: perspective(400px) rotateX(-90deg);
  }

  to {
    transform: perspective(400px) rotateX(0deg);
  }
}

@keyframes flip-y {
  40% {
    animation-timing-function: ease-in;
    transform: perspective(400px) rotateY(-20deg);
  }

  60% {
    transform: perspective(400px) rotateY(10deg);
  }

  80% {
    transform: perspective(400px) rotateY(-5deg);
  }

  from {
    animation-timing-function: ease-in;
    transform: perspective(400px) rotateY(-90deg);
  }

  to {
    transform: perspective(400px) rotateY(0deg);
  }
}

@keyframes heart-beat {
  14% {
    transform: scale3d(1.3, 1.3, 1.3);
  }

  28% {
    transform: scale3d(1, 1, 1);
  }

  42% {
    transform: scale3d(1.3, 1.3, 1.3);
  }

  70% {
    transform: scale3d(1, 1, 1);
  }

  from {
    transform: scale3d(1, 1, 1);
  }
}

@keyframes jello {
  11.1% {
    transform: skewX(-12.5deg) skewY(-12.5deg);
  }

  22.2% {
    transform: skewX(6.25deg) skewY(6.25deg);
  }

  33.3% {
    transform: skewX(-3.125deg) skewY(-3.125deg);
  }

  44.4% {
    transform: skewX(1.5625deg) skewY(1.5625deg);
  }

  55.5% {
    transform: skewX(-0.78125deg) skewY(-0.78125deg);
  }

  66.6% {
    transform: skewX(0.390625deg) skewY(0.390625deg);
  }

  77.7% {
    transform: skewX(-0.1953125deg) skewY(-0.1953125deg);
  }

  88.8% {
    transform: skewX(0.09765625deg) skewY(0.09765625deg);
  }

  from {
    transform: none;
  }

  to {
    transform: none;
  }
}

@keyframes pulse {
  50% {
    transform: scale3d(1.05, 1.05, 1.05);
  }

  from {
    transform: scale3d(1, 1, 1);
  }

  to {
    transform: scale3d(1, 1, 1);
  }
}

@keyframes shake {
  10%, 30%, 50%, 70%, 90% {
    transform: translate3d(-10px, 0, 0);
  }

  20%, 40%, 60%, 80% {
    transform: translate3d(10px, 0, 0);
  }

  from, to {
    transform: translate3d(0, 0, 0);
  }
}

@keyframes slide-in-down {
  from {
    transform: translate3d(0, -100%, 0);
    visibility: visible;
  }

  to {
    transform: translate3d(0, 0, 0);
  }
}

@keyframes slide-in-left {
  from {
    transform: translate3d(-100%, 0, 0);
    visibility: visible;
  }

  to {
    transform: translate3d(0, 0, 0);
  }
}

@keyframes slide-in-right {
  from {
    transform: translate3d(100%, 0, 0);
    visibility: visible;
  }

  to {
    transform: translate3d(0, 0, 0);
  }
}

@keyframes slide-in-up {
  from {
    transform: translate3d(0, 100%, 0);
    visibility: visible;
  }

  to {
    transform: translate3d(0, 0, 0);
  }
}

@keyframes swing {
  20% {
    transform: rotateZ(15deg);
  }

  40% {
    transform: rotateZ(-10deg);
  }

  60% {
    transform: rotateZ(5deg);
  }

  80% {
    transform: rotateZ(-5deg);
  }

  to {
    transform: rotateZ(0deg);
  }
}

@keyframes tada {
  10%, 20% {
    transform: scale3d(0.9, 0.9, 0.9) rotateZ(-3deg);
  }

  30%, 50%, 70%, 90% {
    transform: scale3d(1.1, 1.1, 1.1) rotateZ(3deg);
  }

  40%, 60%, 80% {
    transform: scale3d(0.9, 0.9, 0.9) rotateZ(-3deg);
  }

  from {
    transform: scale3d(1, 1, 1);
  }

  to {
    transform: scale3d(1, 1, 1);
  }
}

@keyframes wobble {
  15% {
    transform: translate3d(-25%, 0, 0) rotateZ(-5deg);
  }

  30% {
    transform: translate3d(20%, 0, 0) rotateZ(3deg);
  }

  45% {
    transform: translate3d(-15%, 0, 0) rotateZ(-3deg);
  }

  60% {
    transform: translate3d(10%, 0, 0) rotateZ(2deg);
  }

  75% {
    transform: translate3d(-5%, 0, 0) rotateZ(-1deg);
  }

  from {
    transform: translate3d(0, 0, 0);
  }

  to {
    transform: translate3d(0, 0, 0);
  }
}

@keyframes zoom-in {
  50% {
    transform: scale3d(1.05, 1.05, 1.05);
  }

  from {
    transform: scale3d(0.3, 0.3, 0.3);
  }

  to {
    transform: scale3d(1, 1, 1);
  }
}

@keyframes zoom-in-down {
  50% {
    transform: scale3d(1.05, 1.05, 1.05) translate3d(0, 60%, 0);
  }

  from {
    transform: scale3d(0.3, 0.3, 0.3) translate3d(0, -100%, 0);
  }

  to {
    transform: scale3d(1, 1, 1) translate3d(0, 0, 0);
  }
}

@keyframes zoom-in-left {
  50% {
    transform: scale3d(1.05, 1.05, 1.05) translate3d(60%, 0, 0);
  }

  from {
    transform: scale3d(0.3, 0.3, 0.3) translate3d(-100%, 0, 0);
  }

  to {
    transform: scale3d(1, 1, 1) translate3d(0, 0, 0);
  }
}

@keyframes zoom-in-right {
  50% {
    transform: scale3d(1.05, 1.05, 1.05) translate3d(-60%, 0, 0);
  }

  from {
    transform: scale3d(0.3, 0.3, 0.3) translate3d(100%, 0, 0);
  }

  to {
    transform: scale3d(1, 1, 1) translate3d(0, 0, 0);
  }
}

@keyframes zoom-in-up {
  50% {
    transform: scale3d(1.05, 1.05, 1.05) translate3d(0, -60%, 0);
  }

  from {
    transform: scale3d(0.3, 0.3, 0.3) translate3d(0, 100%, 0);
  }

  to {
    transform: scale3d(1, 1, 1) translate3d(0, 0, 0);
  }
}

@keyframes zoom-out {
  50% {
    transform: scale3d(0.95, 0.95, 0.95);
  }

  from {
    transform: scale3d(1, 1, 1);
  }

  to {
    transform: scale3d(0.3, 0.3, 0.3);
  }
}

@keyframes zoom-out-down {
  50% {
    transform: scale3d(0.95, 0.95, 0.95) translate3d(0, 60%, 0);
  }

  from {
    transform: scale3d(1, 1, 1) translate3d(0, 0, 0);
  }

  to {
    transform: scale3d(0.3, 0.3, 0.3) translate3d(0, 100%, 0);
  }
}

@keyframes zoom-out-left {
  50% {
    transform: scale3d(0.95, 0.95, 0.95) translate3d(-60%, 0, 0);
  }

  from {
    transform: scale3d(1, 1, 1) translate3d(0, 0, 0);
  }

  to {
    transform: scale3d(0.3, 0.3, 0.3) translate3d(-100%, 0, 0);
  }
}

@keyframes zoom-out-right {
  50% {
    transform: scale3d(0.95, 0.95, 0.95) translate3d(60%, 0, 0);
  }

  from {
    transform: scale3d(1, 1, 1) translate3d(0, 0, 0);
  }

  to {
    transform: scale3d(0.3, 0.3, 0.3) translate3d(100%, 0, 0);
  }
}

@keyframes zoom-out-up {
  50% {
    transform: scale3d(0.95, 0.95, 0.95) translate3d(0, -60%, 0);
  }

  from {
    transform: scale3d(1, 1, 1) translate3d(0, 0, 0);
  }

  to {
    transform: scale3d(0.3, 0.3, 0.3) translate3d(0, -100%, 0);
  }
}

.animate {
  --jumi-animation-composition: replace;
  --jumi-animation-delay: 0s;
  --jumi-animation-direction: alternate-reverse;
  --jumi-animation-duration: 1s;
  --jumi-animation-fill-mode: forwards;
  --jumi-animation-iteration-count: 1;
  --jumi-animation-name: none;
  --jumi-animation-play-state: running;
  --jumi-animation-range: var(--jumi-animation-range-start, normal) var(--jumi-animation-range-end, normal);
  --jumi-animation-range-end: var(--jumi-animation-range-end-name, normal) var(--jumi-animation-range-end-percentage, 100%);
  --jumi-animation-range-start: var(--jumi-animation-range-start-name, normal) var(--jumi-animation-range-start-percentage, 0%);
  --jumi-animation-timeline-inset: var(--jumi-animation-timeline-inset-start, auto) var(--jumi-animation-timeline-inset-end, auto);
  --jumi-animation-timing-function: ease;
  --jumi-aspect-ratio: var(--jumi-aspect-ratio-width, auto) var(--jumi-aspect-ratio-height, auto);
  --jumi-aspect-ratio-height: auto;
  --jumi-aspect-ratio-width: auto;
  --jumi-backdrop-blur: blur(0);
  --jumi-backdrop-brightness: brightness(1);
  --jumi-backdrop-contrast: contrast(1);
  --jumi-backdrop-filter: var(--jumi-backdrop-blur, blur(0)) var(--jumi-backdrop-brightness, brightness(1)) var(--jumi-backdrop-contrast, contrast(1)) var(--jumi-backdrop-grayscale, grayscale(0)) var(--jumi-backdrop-hue-rotate, hue-rotate(0deg)) var(--jumi-backdrop-invert, invert(0)) var(--jumi-backdrop-opacity, opacity(1)) var(--jumi-backdrop-saturate, saturate(1)) var(--jumi-backdrop-sepia, sepia(0));
  --jumi-backdrop-grayscale: grayscale(0);
  --jumi-backdrop-hue-rotate: hue-rotate(0deg);
  --jumi-backdrop-invert: invert(0);
  --jumi-backdrop-opacity: opacity(1);
  --jumi-backdrop-saturate: saturate(1);
  --jumi-backdrop-sepia: sepia(0);
  --jumi-bg-color: transparent;
  --jumi-bg-position: 0% 0%;
  --jumi-bg-size: auto;
  --jumi-blur: blur(0);
  --jumi-border-color: currentColor;
  --jumi-border-radius: 0;
  --jumi-border-width: 0;
  --jumi-bottom: auto;
  --jumi-brightness: brightness(1);
  --jumi-color: inherit;
  --jumi-contrast: contrast(1);
  --jumi-display: var(--jumi-display-ouside, block);
  --jumi-display: var(--jumi-display-inside, flow);
  --jumi-display-inside: flow;
  --jumi-display-ouside: block;
  --jumi-drop-shadow: drop-shadow(0 0 0 transparent);
  --jumi-fill: currentColor;
  --jumi-filter: var(--jumi-blur, blur(0)) var(--jumi-brightness, brightness(1)) var(--jumi-contrast, contrast(1)) var(--jumi-grayscale, grayscale(0)) var(--jumi-hue-rotate, hue-rotate(0deg)) var(--jumi-invert, invert(0)) var(--jumi-saturate, saturate(1)) var(--jumi-sepia, sepia(0)) var(--jumi-opacity, opacity(1)) var(--jumi-drop-shadow, drop-shadow(0 0 0 transparent));
  --jumi-flex-basis: auto;
  --jumi-flex-grow: 0;
  --jumi-flex-shrink: 1;
  --jumi-font-size: 1rem;
  --jumi-font-weight: 400;
  --jumi-gap: 0;
  --jumi-grayscale: grayscale(0);
  --jumi-height: auto;
  --jumi-hue-rotate: hue-rotate(0deg);
  --jumi-invert: invert(0);
  --jumi-left: auto;
  --jumi-letter-spacing: 0em;
  --jumi-line-height: 1.5;
  --jumi-opacity: 1;
  --jumi-order: 0;
  --jumi-outline-color: currentColor;
  --jumi-outline-offset: 0;
  --jumi-outline-width: 0;
  --jumi-perspective: none;
  --jumi-perspective-origin: center;
  --jumi-right: auto;
  --jumi-rotate: 0deg;
  --jumi-rotate-x: 0deg;
  --jumi-rotate-y: 0deg;
  --jumi-rotate-z: 0deg;
  --jumi-saturate: saturate(1);
  --jumi-scale-x: 1;
  --jumi-scale-y: 1;
  --jumi-scale-z: 1;
  --jumi-sepia: sepia(0);
  --jumi-shadow: 0 0 0 0 transparent;
  --jumi-skew-x: 0deg;
  --jumi-skew-y: 0deg;
  --jumi-stroke: none;
  --jumi-stroke-width: 1;
  --jumi-text-shadow: none;
  --jumi-top: auto;
  --jumi-transform: translateX(var(--jumi-translate-x, 0)) translateY(var(--jumi-translate-y, 0)) translateZ(var(--jumi-translate-z, 0)) rotate(var(--jumi-rotate, 0deg)) rotateX(var(--jumi-rotate-x, 0deg)) rotateY(var(--jumi-rotate-y, 0deg)) rotateZ(var(--jumi-rotate-z, 0deg)) skewX(var(--jumi-skew-x, 0deg)) skewY(var(--jumi-skew-y, 0deg)) scaleX(var(--jumi-scale-x, 1)) scaleY(var(--jumi-scale-y, 1)) scaleZ(var(--jumi-scale-z, 1));
  --jumi-transform-gpu: translate3d(var(--jumi-translate-x, 0), var(--jumi-translate-y, 0), var(--jumi-translate-z, 0)) rotate(var(--jumi-rotate, 0deg)) rotateX(var(--jumi-rotate-x, 0deg)) rotateY(var(--jumi-rotate-y, 0deg)) rotateZ(var(--jumi-rotate-z, 0deg)) skewX(var(--jumi-skew-x, 0deg)) skewY(var(--jumi-skew-y, 0deg)) scaleX(var(--jumi-scale-x, 1)) scaleY(var(--jumi-scale-y, 1)) scaleZ(var(--jumi-scale-z, 1));
  --jumi-transform-origin: center;
  --jumi-transform-origin-x: 50%;
  --jumi-transform-origin-y: 50%;
  --jumi-transform-origin-z: 0px;
  --jumi-transform-style: flat;
  --jumi-translate-x: 0;
  --jumi-translate-y: 0;
  --jumi-translate-z: 0;
  --jumi-width: auto;
  --jumi-z-index: auto;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.mb-12 {
  margin-bottom: 3rem;
}

.mb-2 {
  margin-bottom: 0.5rem;
}

.mb-4 {
  margin-bottom: 1rem;
}

.mt-2 {
  margin-top: 0.5rem;
}

.mt-4 {
  margin-top: 1rem;
}

.flex {
  display: flex;
}

.grid {
  display: grid;
}

.h-16 {
  height: 4rem;
}

.h-32 {
  height: 8rem;
}

.h-8 {
  height: 2rem;
}

.h-\[2rem\] {
  height: 2rem;
}

.h-full {
  height: 100%;
}

.w-1\/5 {
  width: 20%;
}

.w-16 {
  width: 4rem;
}

.w-32 {
  width: 8rem;
}

.w-full {
  width: 100%;
}

.max-w-4xl {
  max-width: 56rem;
}

.cursor-pointer {
  cursor: pointer;
}

.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}

.grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}

.place-items-center {
  place-items: center;
}

.items-center {
  align-items: center;
}

.justify-center {
  justify-content: center;
}

.gap-4 {
  gap: 1rem;
}

.space-y-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}

.space-y-8 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(2rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(2rem * var(--tw-space-y-reverse));
}

.rounded {
  border-radius: 0.25rem;
}

.rounded-full {
  border-radius: 9999px;
}

.rounded-lg {
  border-radius: 0.5rem;
}

.rounded-none {
  border-radius: 0px;
}

.border {
  border-width: 1px;
}

.bg-blue-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(219 234 254 / var(--tw-bg-opacity, 1));
}

.bg-blue-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(59 130 246 / var(--tw-bg-opacity, 1));
}

.bg-blue-700 {
  --tw-bg-opacity: 1;
  background-color: rgb(29 78 216 / var(--tw-bg-opacity, 1));
}

.bg-gray-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(243 244 246 / var(--tw-bg-opacity, 1));
}

.bg-gray-200 {
  --tw-bg-opacity: 1;
  background-color: rgb(229 231 235 / var(--tw-bg-opacity, 1));
}

.bg-gray-300 {
  --tw-bg-opacity: 1;
  background-color: rgb(209 213 219 / var(--tw-bg-opacity, 1));
}

.bg-green-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(220 252 231 / var(--tw-bg-opacity, 1));
}

.bg-green-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(34 197 94 / var(--tw-bg-opacity, 1));
}

.bg-indigo-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(224 231 255 / var(--tw-bg-opacity, 1));
}

.bg-indigo-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(99 102 241 / var(--tw-bg-opacity, 1));
}

.bg-orange-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(249 115 22 / var(--tw-bg-opacity, 1));
}

.bg-pink-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(252 231 243 / var(--tw-bg-opacity, 1));
}

.bg-pink-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(236 72 153 / var(--tw-bg-opacity, 1));
}

.bg-purple-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(243 232 255 / var(--tw-bg-opacity, 1));
}

.bg-purple-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(168 85 247 / var(--tw-bg-opacity, 1));
}

.bg-red-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(254 226 226 / var(--tw-bg-opacity, 1));
}

.bg-red-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(239 68 68 / var(--tw-bg-opacity, 1));
}

.bg-teal-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(204 251 241 / var(--tw-bg-opacity, 1));
}

.bg-teal-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(20 184 166 / var(--tw-bg-opacity, 1));
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
}

.bg-yellow-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(254 249 195 / var(--tw-bg-opacity, 1));
}

.bg-yellow-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(234 179 8 / var(--tw-bg-opacity, 1));
}

.bg-gradient-to-r {
  background-image: linear-gradient(to right, var(--tw-gradient-stops));
}

.from-blue-400 {
  --tw-gradient-from: #60a5fa var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(96 165 250 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.from-pink-500 {
  --tw-gradient-from: #ec4899 var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(236 72 153 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.to-purple-600 {
  --tw-gradient-to: #9333ea var(--tw-gradient-to-position);
}

.to-yellow-500 {
  --tw-gradient-to: #eab308 var(--tw-gradient-to-position);
}

.p-4 {
  padding: 1rem;
}

.p-6 {
  padding: 1.5rem;
}

.p-8 {
  padding: 2rem;
}

.text-center {
  text-align: center;
}

.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.text-4xl {
  font-size: 2.25rem;
  line-height: 2.5rem;
}

.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.font-bold {
  font-weight: 700;
}

.font-medium {
  font-weight: 500;
}

.font-semibold {
  font-weight: 600;
}

.text-gray-600 {
  --tw-text-opacity: 1;
  color: rgb(75 85 99 / var(--tw-text-opacity, 1));
}

.text-gray-800 {
  --tw-text-opacity: 1;
  color: rgb(31 41 55 / var(--tw-text-opacity, 1));
}

.text-gray-900 {
  --tw-text-opacity: 1;
  color: rgb(17 24 39 / var(--tw-text-opacity, 1));
}

.shadow-lg {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.animate-scale-110 {
  --jumi-animation-name: jumi-scale-uniform;
  --jumi-scale: 1.1;
}

.animate-scale-125 {
  --jumi-animation-name: jumi-scale-uniform;
  --jumi-scale: 1.25;
}

.animate-scale-50 {
  --jumi-animation-name: jumi-scale-uniform;
  --jumi-scale: 0.5;
}

.animate-rotate-3 {
  --jumi-animation-name: jumi-rotate-z;
  --jumi-rotate-z: 54deg;
}

.animate-rotate-360 {
  --jumi-animation-name: jumi-rotate-z;
  --jumi-rotate-z: 360deg;
}

.animate-rotate-45 {
  --jumi-animation-name: jumi-rotate-z;
  --jumi-rotate-z: 45deg;
}

.animate-rotate-90 {
  --jumi-animation-name: jumi-rotate-z;
  --jumi-rotate-z: 90deg;
}

.animate-translate-right-5 {
  animation-name: jumi-translate-right;
  --jumi-translate-x: calc(25% * 1);
}

.animate-translate-top-right-3 {
  animation-name: jumi-translate-top-right;
  --jumi-translate-x: calc(15% * 1);
  --jumi-translate-y: calc(15% * -1);
}

.animate {
  animation-composition: var(--jumi-animation-composition);
  animation-delay: var(--jumi-animation-delay);
  animation-direction: var(--jumi-animation-direction);
  animation-duration: var(--jumi-animation-duration);
  animation-fill-mode: var(--jumi-animation-fill-mode);
  animation-iteration-count: var(--jumi-animation-iteration-count);
  animation-name: var(--jumi-animation-name);
  animation-play-state: var(--jumi-animation-play-state);
  animation-range: var(--jumi-animation-range, normal);
  animation-range-end: var(--jumi-animation-range-end, normal);
  animation-range-start: var(--jumi-animation-range-start, normal);
  animation-timeline: var(--jumi-animation-timeline, auto);
  animation-timing-function: var(--jumi-animation-timing-function);
  transform: var(--jumi-transform);
}

.animate-bounce-in {
  animation: bounce-in;
}

.animate-fade-in {
  animation: fade-in;
}

.animate-slide-in-up {
  animation: slide-in-up;
}

.animate-zoom-in {
  animation: zoom-in;
}

.animate-delay-1 {
  --jumi-animation-delay: 1s;
}

.animate-delay-500 {
  --jumi-animation-delay: 500ms;
}

.animate-duration-1 {
  --jumi-animation-duration: 1s;
}

.animate-duration-2 {
  --jumi-animation-duration: 2s;
}

.animate-duration-3 {
  --jumi-animation-duration: 3s;
}

.animate-opacity-20 {
  --jumi-opacity: 0.2;
}

.animate-color-red-500 {
  animation-name: jumi-color;
  --jumi-color: #ef4444;
}

.animate-fill-purple-500 {
  animation-name: jumi-fill;
  --jumi-fill: #a855f7;
}

.animate-bg-blue-500 {
  animation-name: jumi-bg-color;
  --jumi-bg-color: #3b82f6;
}

.animate-bg-red-500 {
  animation-name: jumi-bg-color;
  --jumi-bg-color: #ef4444;
}

.hover\:animate-scale-110:hover {
  --jumi-animation-name: jumi-scale-uniform;
  --jumi-scale: 1.1;
}

.hover\:animate-rotate-5:hover {
  --jumi-animation-name: jumi-rotate-z;
  --jumi-rotate-z: 90deg;
}

.hover\:animate-bounce-in:hover {
  animation: bounce-in;
}

.hover\:animate-duration-200:hover {
  --jumi-animation-duration: 200ms;
}

.hover\:animate-duration-300:hover {
  --jumi-animation-duration: 300ms;
}

.hover\:animate-duration-500:hover {
  --jumi-animation-duration: 500ms;
}

@media (min-width: 768px) {
  .md\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .md\:grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  .md\:grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }
}
