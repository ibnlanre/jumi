//////////////////////////////////////////////////
// CONSTRUCT
//////////////////////////////////////////////////

@mixin brew($property, $alias, $value: null, $short: false) {
  .jumi-#{$alias},
  .hover\:jumi-#{$alias}:hover {
    @include function-generator(#{$property});
    --#{$property}: jumi-#{$alias};
  }

  $keyname: if($short, $short, $property);
  @if ($value) {
    @keyframes jumi-#{$alias} {
      to {
        #{$keyname}: #{$value};
      }
    }
    .base\:jumi-#{$alias} {
      #{$keyname}: #{$value};
    }
  }
}

//////////////////////////////////////////////////
// TIMING
//////////////////////////////////////////////////

@mixin timing-generator($property) {
  @each $time in $timing-in-ms {
    .jumi-#{$property}-#{$time}ms {
      --#{$property}: #{$time}ms;
    }
  }

  @each $time in $timing-in-s {
    .jumi-#{$property}-#{$time}s {
      --#{$property}: #{$time}s;
    }
  }
}

//////////////////////////////////////////////////
// DIRECTION
//////////////////////////////////////////////////

@mixin direction-generator($property) {
  .jumi-#{$property}-reverse {
    --#{$property}-direction: reverse;
  }
  .jumi-#{$property}-alternate {
    --#{$property}-direction: alternate;
  }
}

//////////////////////////////////////////////////
// FILL-MODE
//////////////////////////////////////////////////

@mixin fill-mode-generator($property) {
  .jumi-#{$property}-fill-forwards {
    --#{$property}-fill-mode: forwards;
  }

  .jumi-#{$property}-fill-backwards {
    --#{$property}-fill-mode: backwards;
  }

  .jumi-#{$property}-fill-both {
    --#{$property}-fill-mode: both;
  }
}

//////////////////////////////////////////////////
// EASING
//////////////////////////////////////////////////

@mixin easing-generator($property: "") {
  $default: "linear", "ease-in", "ease-out", "ease-in-out";

  @each $prefix in $default {
    .jumi#{$property}-#{$prefix} {
      -#{$property}-timing-function: #{$prefix};
    }
  
    @if (str-index($prefix, "ease")) {
      @each $easing in $easings {
        $ease: map-get($easing-types, #{$prefix}-#{$easing});
  
        .jumi-#{$prefix}-#{$easing} {
          -#{$property}-timing-function: #{$ease};
        }
      }
    }
  }
}

//////////////////////////////////////////////////
// VARIABLES
//////////////////////////////////////////////////

@mixin variable-generator($property) {
  --#{$property}: none;
  --#{$property}-duration: var(--duration);
  --#{$property}-timing-function: var(--timing-function);
  --#{$property}-delay: var(--delay);
  --#{$property}-direction: var(--direction);
  --#{$property}-iteration-count: var(--iteration-count);
  --#{$property}-fill-mode: var(--fill-mode);
  --#{$property}-play-state: var(--play-state);
  --#{$property}-fn: none;
}

//////////////////////////////////////////////////
// FUNCTIONS
//////////////////////////////////////////////////

@mixin function-generator($property) {
  --#{$property}-fn: var(--#{$property}) var(--#{$property}-duration)
    var(--#{$property}-timing-function) var(--#{$property}-delay)
    var(--#{$property}-direction) var(--#{$property}-iteration-count)
    var(--#{$property}-fill-mode) var(--#{$property}-play-state);
}

//////////////////////////////////////////////////
// ANIMATION
//////////////////////////////////////////////////

@mixin animation-generator($property) {
  @include variable-generator($property);

  // TIMING
  @include timing-generator($property + "-delay");

  // DIRECTION
  @include direction-generator($property);

  // DURATION
  @include timing-generator($property + "-duration");

  // FILL-MODE
  @include fill-mode-generator($property);

  // TIMING-FUNCTION
  @include easing-generator(-#{$property})
}

//////////////////////////////////////////////////
// JUMI
//////////////////////////////////////////////////

@mixin jumi {
  $value: var(--effect-fn);
  @each $property in $properties {
    $value: $value + ", " + var(--#{$property}-fn);
  }

  // animation: $value;
  animation: var(--rz-fn);
}
